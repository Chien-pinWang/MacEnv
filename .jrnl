
alias Last1="jrnl -1"
alias Last5="jrnl -5 --short"
alias Today="jrnl -on today"
alias Yesterday="jrnl -on yesterday --short"
alias Starred="jrnl -starred --short"
alias Tags="jrnl --tags | more"
alias All="jrnl -from 2017-03-03 --short"

alias bash="jrnl @bash --short"
alias ethereum="jrnl @ethereum --short"
alias iota="jrnl @iota --short"
alias headache="jrnl @headache --short"

export JRNLPATH="~/prj/MacBookPro/.jrnl"

function j?() {
    while read line
    do
        echo -e "$line"
    done < ~/prj/MacBookPro/.jrnl/jHint.txt
    # done < $JRNLPATH/jHint.txt
}

function journal () {
    if [ -z "$1" ]                      # Journal title
    then
        t="[Journal Title]"
    else
        t="$1"
    fi
    j="$2"                              # Going to which journal
    
    case "$j" in
    "goofy")
        template="goofy_template.txt"
        ;;
    "blockchain")
        template="blockchain_template.txt"
        ;;
    "here")
        template="default_template.txt"
        ;;
    *)
        template="default_template.txt"
        j=""
        ;;
    esac

    echo "$t" | cat - ~/prj/MacBookPro/.jrnl/$template > ~/prj/MacBookPro/.jrnl/temp_journal.txt

    jrnl $j < ~/prj/MacBookPro/.jrnl/temp_journal.txt
    jrnl $j -1 --edit
    rm ~/prj/MacBookPro/.jrnl/temp_journal.txt
}

function Search () {
    jrnl -from 2017-01-01 | ag "$1" -A 3 -B 3
}

function jMem () {
    # First set Internal Field Seperator (IFS) to new line
    IFS=$'\r\n'

    # Get the last 10 titles with keyword @memory in jrnl to array $titles
    titles=($(jrnl @memory --short -n 10))

    # Get the count of arrays
    count=${#titles[*]}

    for (( i=0; i<3; i++))
    do
        # Use residual of division '%' as index to get a random jrnl title
        echo "${titles[$((RANDOM%count))]}"
    done
}
